%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.10
%%CreationDate: Wed Jan 15 18:47:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GAAAACGGGAAAAACUAGUGGAAAACGCUUAAAAAAAACAACAAAGAUAACAAAAAAAACA\
) def
/coor [
[128.18110657 226.13740540]
[121.55491638 212.62153625]
[117.78543091 198.04841614]
[117.02699280 183.01480103]
[119.31066895 168.13630676]
[124.54294586 154.02218628]
[132.50956726 141.25042725]
[119.57588196 148.73657227]
[105.05735779 152.27706909]
[90.12940216 151.58528137]
[76.00055695 146.71719360]
[63.81467819 138.06694031]
[54.55832291 126.33482361]
[48.98087311 112.47068024]
[47.53387451 97.59692383]
[50.33447266 82.91770935]
[57.15593719 69.62146759]
[46.28404236 59.28696060]
[35.41215134 48.95245743]
[24.54026031 38.61795425]
[8.53047466 37.58532333]
[-0.52554864 24.34266472]
[4.31919575 9.04861355]
[19.34823418 3.43545628]
[33.03257751 11.80912685]
[34.87476349 27.74606133]
[45.74665451 38.08056641]
[56.61854935 48.41506958]
[67.49044037 58.74957275]
[80.42411804 51.26342010]
[94.94264221 47.72292709]
[109.87059784 48.41472626]
[123.99944305 53.28281021]
[136.18531799 61.93306351]
[145.44168091 73.66517639]
[151.01913452 87.52931976]
[152.46612549 102.40307617]
[149.66552734 117.08229065]
[142.84407043 130.37854004]
[155.19593811 121.77526855]
[169.02691650 115.83483887]
[183.77066040 112.80050659]
[198.82339478 112.79653168]
[213.56872559 115.82306671]
[227.40286255 121.75617981]
[239.75927734 130.35292053]
[250.13198853 141.26124573]
[258.09625244 154.03446960]
[263.32592773 168.14955139]
[265.60687256 183.02845764]
[264.84567261 198.06193542]
[261.07351685 212.63436890]
[254.44483948 226.14901733]
[245.23110962 238.05245972]
[233.80960083 247.85726929]
[220.64804077 255.16192627]
[206.28536987 259.66732788]
[191.30975342 261.18899536]
[176.33439636 259.66458130]
[161.97256470 255.15653992]
[148.81234741 247.84945679]
] def
/pairs [
[7 39]
[17 29]
[18 28]
[19 27]
[20 26]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
